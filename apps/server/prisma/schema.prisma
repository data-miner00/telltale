// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  username      String          @unique
  profile       UserProfile?
  preference    UserPreference?
  online        Boolean         @default(true)
  chat_messages Message[]
  memberships   Membership[]
  last_seen     DateTime        @default(now())
  created_at    DateTime        @default(now())
}

enum SsoProvider {
  NONE
  FACEBOOK
  GOOGLE
  TWITTER
  GITHUB
}

enum Web3Network {
  NONE
  ETHEREUM
  CARDANO
  ALGORAND
  SOLANA
}

enum Theme {
  SYSTEM
  LIGHT
  DARK
}

model UserProfile {
  id                Int         @id @default(autoincrement())
  user              User        @relation(fields: [user_id], references: [id])
  user_id           Int         @unique
  alias             String?
  password          String?
  avatar_url        String?
  email_address     String?     @unique
  is_email_verified Boolean     @default(false)
  location          String?
  description       String?
  phone_number      String?     @unique
  sso_provider      SsoProvider @default(NONE)
  web3_address      String?     @unique
  web3_network      Web3Network @default(NONE)
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt
}

model UserPreference {
  id                     Int      @id @default(autoincrement())
  user                   User     @relation(fields: [user_id], references: [id])
  user_id                Int      @unique
  theme                  Theme    @default(SYSTEM)
  subscribe_mailing_list Boolean  @default(false)
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
}

model Room {
  id            Int          @id @default(autoincrement())
  name          String?
  description   String?
  password      String?
  avatar_url    String?
  chat_messages Message[]
  memberships   Membership[]
  is_dm         Boolean      @default(false)
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
}

model Message {
  id         Int      @id @default(autoincrement())
  author     User     @relation(fields: [author_id], references: [id])
  author_id  Int
  room       Room     @relation(fields: [room_id], references: [id])
  room_id    Int
  content    String
  is_deleted Boolean  @default(false)
  sent_at    DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Membership {
  room      Room      @relation(fields: [room_id], references: [id])
  room_id   Int
  user      User      @relation(fields: [user_id], references: [id])
  user_id   Int
  joined_at DateTime  @default(now())
  left_at   DateTime?
  is_admin  Boolean   @default(false)

  @@id([room_id, user_id])
}
